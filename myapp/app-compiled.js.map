{"version":3,"sources":["app.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,MAAM,GAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,MAAM,GAAC,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAC7C,IAAI,EAAE,GAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;;AAAC,AAE3C,IAAI,MAAM,GAAC,OAAO,CAAC,MAAM,EAAE,CAAC;AAC5B,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;;AAAC,AAElB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3C,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;;;;AAAC,AAMvC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAC,UAAS,GAAG,EAAC,GAAG,EAAC;AAChC,KAAG,CAAC,QAAQ,CAAC,mBAAmB,EAAC,EAAC,IAAI,EAAC,SAAS,EAAC,CAAC,CAAC;CACpD,CAAC;;;;;;;;;;;;;;AAAC,AAcH,EAAE,CAAC,EAAE,CAAC,YAAY,EAAC,UAAS,MAAM,EAAC;;AAEjC,QAAM,CAAC,EAAE,CAAC,SAAS,EAAC,UAAS,IAAI,EAAC;AAChC,UAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;GACvC,CAAC,CAAC;AACH,QAAM,CAAC,EAAE,CAAC,YAAY,EAAC,YAAU;;AAE/B,UAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;GAExB,CAAC,CAAC;AACH,IAAE,CAAC,GAAG,CAAC,UAAS,MAAM,EAAE,IAAI,EAAC;;AAE3B,QAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,IAAI,EAAE,CAAC;AACjD,QAAI,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;GACzC,CAAC,CAAC;CACJ,CAAC;;;;;;AAAC,AAMH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAuBpB,GAAG,CAAC,GAAG,CAAC,SAAS,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACjD,KAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAChB,KAAG,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;CACrC,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC;AAC5B,SAAO,CAAC,GAAG,CAAC,eAAe,CAAC;;;AAAC,CAG9B,CAAC;;;;;;;AAAC,AAOH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;AACrB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;AACxB,IAAI,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC","file":"app-compiled.js","sourcesContent":["//var express = require('express');\n//var path = require('path');\n//var favicon = require('serve-favicon');\n//var logger = require('morgan');\n//var cookieParser = require('cookie-parser');\n//var bodyParser = require('body-parser');\n//\n\n//\n//var app = express();\n//\n//// view engine setup\n//app.set('views', path.join(__dirname, 'views'));\n//app.set('view engine', 'jade');\n//\n//// uncomment after placing your favicon in /public\n////app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n//app.use(logger('dev'));\n//app.use(bodyParser.json());\n//app.use(bodyParser.urlencoded({ extended: false }));\n//app.use(cookieParser());\n//app.use(express.static(path.join(__dirname, 'views')));\n//app.use('/static',express.static(path.join(__dirname, 'public')));\n//\n//app.use('/', routes);\n//app.use('/users', users);\n//\n//// catch 404 and forward to error handler\n//app.use(function(req, res, next) {\n//  var err = new Error('Not Found');\n//  err.status = 404;\n//  next(err);\n//});\n//\n//// error handlers\n//\n//// development error handler\n//// will print stacktraces\n//if (app.get('env') === 'development') {\n//  app.use(function(err, req, res, next) {\n//    res.status(err.status || 500);\n//    res.render('error', {\n//      message: err.message,\n//      error: err\n//    });\n//  });\n//}\n//\n//\n//// production error handler\n//// no stacktraces leaked to user\n//app.use(function(err, req, res, next) {\n//  res.status(err.status || 500);\n//  res.render('error', {\n//    message: err.message,\n//    error: {}\n//  });\n//});\n//\n//\n//module.exports = app;\n//\n\nvar express = require('express');\nvar morgan=require('morgan');\nvar app = express();\nvar server=require('http').createServer(app);\nvar io=require('socket.io').listen(server);\n//app.set('port'.process.env.PORT||3000);\nvar router=express.Router();\napp.use(morgan());\n/*静态路由*/\napp.use(express.static('public'));\napp.use('/static', express.static('dist'));\napp.use('/js', express.static('dist'));\n\n\n//app.get('/', function (req, res) {\n//  res.status(200).send('欢迎来到汇智网学习！');\n//});\napp.get('/index',function(req,res){\n  res.sendFile('public/index.html',{root:__dirname});\n});\n//app.get('/common.js',function(req,res){\n//  res.sendFile('common.js',{root:__dirname});\n//});\n//io.on('connection',function(socket){\n//  //连接成功...\n//  socket.send('客户端接受!!');\n//  socket.on('message',function(data){\n//    //收到消息\n//    console.log('服务端已接受信息!!');\n//    console.log(data);\n//  });\n//\n//});\nio.on('connection',function(socket){\n  //socket.broadcast.to('chat').emit('DATA',\"发送信息!!\");\n  socket.on('message',function(data){\n    socket.broadcast.emit('message',data);\n  });\n  socket.on('disconnect',function(){\n    //用户已经离开...\n    socket.send('用户已离开!!');\n\n  });\n  io.use(function(socket, next){\n    //console.log('中间件使用!!',socket.request);\n    if (socket.request.headers.cookie) return next();\n    next(new Error('Authentication error'));\n  });\n});\n\n//io.use(function(socket){\n//  console.log(socket.request._query.id);\n//});\n\nserver.listen(3000);\n/*后端路由*/\n//router.get('/add', function (req, res) {\n//  console.log(req,res);\n//  res.send('Hello World!');\n//  res.end(\"router /add\\n\");\n//});\n//router.get('/list', function (req, res, next) {\n//  console.log(req,res);\n//  console.log('Accessing the secret section ...');\n//  res.end(\"router /list\\n\");\n//});\n//app.use('/websocket',router);\n\n/*带参数的路由*/\n//app.param('newId',function(req,res,next,newsId){\n//  req.newsId=newsId;\n//  next();\n//});\n//app.get(\"/news/:newId\",function(req,res){\n//  console.log(req.newsId);\n//  res.end('newsId:'+req.newsId);\n//});\napp.use(function errorHandler(err, req, res, next) {\n  res.status(500);\n  res.render('error', { error: err });\n});\napp.use(function(req,res,next){\n  console.log('每次请求都会执行该方法!!');\n  //res.end('hello\\n');\n  //next();\n});\n//\n//var server = app.listen(3000, function () {\n//  var host = server.address().address;\n//  var port = server.address().port;\n//  console.log('Example app listening at http://%s:%s', host, port);\n//});\nmodule.exports = app;\nmodule.exports = router;\nvar routes = require('./routes/index');\n\n"]}