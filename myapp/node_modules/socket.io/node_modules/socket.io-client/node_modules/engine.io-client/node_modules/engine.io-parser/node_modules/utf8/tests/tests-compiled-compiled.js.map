{"version":3,"sources":["tests-compiled.js"],"names":[],"mappings":"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","file":"tests-compiled-compiled.js","sourcesContent":["(function (root) {\n\t'use strict';\n\n\tvar noop = Function.prototype;\n\n\tvar load = typeof require == 'function' && !(root.define && define.amd) ? require : !root.document && root.java && root.load || noop;\n\n\tvar QUnit = (function () {\n\t\treturn root.QUnit || (root.addEventListener || (root.addEventListener = noop), root.setTimeout || (root.setTimeout = noop), root.QUnit = load('../node_modules/qunitjs/qunit/qunit.js') || root.QUnit, addEventListener === noop && delete root.addEventListener, root.QUnit);\n\t})();\n\n\tvar qe = load('../node_modules/qunit-extras/qunit-extras.js');\n\tif (qe) {\n\t\tqe.runInContext(root);\n\t}\n\n\t/** The `utf8` object to test */\n\tvar utf8 = root.utf8 || (root.utf8 = (utf8 = load('../utf8.js') || root.utf8, utf8 = utf8.utf8 || utf8));\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction forEach(array, fn) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tfn(array[index]);\n\t\t}\n\t}\n\n\t// Quick and dirty test to see if weâ€™re in Node & need extended tests\n\tvar runExtendedTests = (function () {\n\t\ttry {\n\t\t\treturn process.argv[0] == 'node' && process.argv[2] == '--extended';\n\t\t} catch (error) {}\n\t})();\n\n\tvar data = [\n\t// 1-byte\n\t{\n\t\t'codePoint': 0x0000,\n\t\t'decoded': '\\0',\n\t\t'encoded': '\\0'\n\t}, {\n\t\t'codePoint': 0x005C,\n\t\t'decoded': '\\x5C',\n\t\t'encoded': '\\x5C'\n\t}, {\n\t\t'codePoint': 0x007F,\n\t\t'decoded': '\\x7F',\n\t\t'encoded': '\\x7F'\n\t},\n\n\t// 2-byte\n\t{\n\t\t'codePoint': 0x0080,\n\t\t'decoded': '\\x80',\n\t\t'encoded': '\\xC2\\x80'\n\t}, {\n\t\t'codePoint': 0x05CA,\n\t\t'decoded': '\\u05CA',\n\t\t'encoded': '\\xD7\\x8A'\n\t}, {\n\t\t'codePoint': 0x07FF,\n\t\t'decoded': '\\u07FF',\n\t\t'encoded': '\\xDF\\xBF'\n\t},\n\n\t// 3-byte\n\t{\n\t\t'codePoint': 0x0800,\n\t\t'decoded': '\\u0800',\n\t\t'encoded': '\\xE0\\xA0\\x80'\n\t}, {\n\t\t'codePoint': 0x2C3C,\n\t\t'decoded': '\\u2C3C',\n\t\t'encoded': '\\xE2\\xB0\\xBC'\n\t}, {\n\t\t'codePoint': 0xFFFF,\n\t\t'decoded': '\\uFFFF',\n\t\t'encoded': '\\xEF\\xBF\\xBF'\n\t},\n\t// unmatched surrogate halves\n\t// high surrogates: 0xD800 to 0xDBFF\n\t{\n\t\t'codePoint': 0xD800,\n\t\t'decoded': '\\uD800',\n\t\t'encoded': '\\xED\\xA0\\x80',\n\t\t'error': true\n\t}, {\n\t\t'description': 'High surrogate followed by another high surrogate',\n\t\t'decoded': '\\uD800\\uD800',\n\t\t'encoded': '\\xED\\xA0\\x80\\xED\\xA0\\x80',\n\t\t'error': true\n\t}, {\n\t\t'description': 'High surrogate followed by a symbol that is not a surrogate',\n\t\t'decoded': '\\uD800A',\n\t\t'encoded': '\\xED\\xA0\\x80A',\n\t\t'error': true\n\t}, {\n\t\t'description': 'Unmatched high surrogate, followed by a surrogate pair, followed by an unmatched high surrogate',\n\t\t'decoded': '\\uD800\\uD834\\uDF06\\uD800',\n\t\t'encoded': '\\xED\\xA0\\x80\\xF0\\x9D\\x8C\\x86\\xED\\xA0\\x80',\n\t\t'error': true\n\t}, {\n\t\t'codePoint': 0xD9AF,\n\t\t'decoded': '\\uD9AF',\n\t\t'encoded': '\\xED\\xA6\\xAF',\n\t\t'error': true\n\t}, {\n\t\t'codePoint': 0xDBFF,\n\t\t'decoded': '\\uDBFF',\n\t\t'encoded': '\\xED\\xAF\\xBF',\n\t\t'error': true\n\t},\n\t// low surrogates: 0xDC00 to 0xDFFF\n\t{\n\t\t'codePoint': 0xDC00,\n\t\t'decoded': '\\uDC00',\n\t\t'encoded': '\\xED\\xB0\\x80',\n\t\t'error': true\n\t}, {\n\t\t'description': 'Low surrogate followed by another low surrogate',\n\t\t'decoded': '\\uDC00\\uDC00',\n\t\t'encoded': '\\xED\\xB0\\x80\\xED\\xB0\\x80',\n\t\t'error': true\n\t}, {\n\t\t'description': 'Low surrogate followed by a symbol that is not a surrogate',\n\t\t'decoded': '\\uDC00A',\n\t\t'encoded': '\\xED\\xB0\\x80A',\n\t\t'error': true\n\t}, {\n\t\t'description': 'Unmatched low surrogate, followed by a surrogate pair, followed by an unmatched low surrogate',\n\t\t'decoded': '\\uDC00\\uD834\\uDF06\\uDC00',\n\t\t'encoded': '\\xED\\xB0\\x80\\xF0\\x9D\\x8C\\x86\\xED\\xB0\\x80',\n\t\t'error': true\n\t}, {\n\t\t'codePoint': 0xDEEE,\n\t\t'decoded': '\\uDEEE',\n\t\t'encoded': '\\xED\\xBB\\xAE',\n\t\t'error': true\n\t}, {\n\t\t'codePoint': 0xDFFF,\n\t\t'decoded': '\\uDFFF',\n\t\t'encoded': '\\xED\\xBF\\xBF',\n\t\t'error': true\n\t},\n\n\t// 4-byte\n\t{\n\t\t'codePoint': 0x010000,\n\t\t'decoded': '\\uD800\\uDC00',\n\t\t'encoded': '\\xF0\\x90\\x80\\x80'\n\t}, {\n\t\t'codePoint': 0x01D306,\n\t\t'decoded': '\\uD834\\uDF06',\n\t\t'encoded': '\\xF0\\x9D\\x8C\\x86'\n\t}, {\n\t\t'codePoint': 0x10FFF,\n\t\t'decoded': '\\uDBFF\\uDFFF',\n\t\t'encoded': '\\xF4\\x8F\\xBF\\xBF'\n\t}];\n\n\tif (runExtendedTests) {\n\t\tdata = data.concat(require('./data.json'));\n\t}\n\n\t// `throws` is a reserved word in ES3; alias it to avoid errors\n\tvar raises = QUnit.assert['throws'];\n\n\t// explicitly call `QUnit.module()` instead of `module()`\n\t// in case we are in a CLI environment\n\tQUnit.module('utf8.js');\n\n\ttest('encode/decode', function () {\n\t\tforEach(data, function (object) {\n\t\t\tvar description = object.description || 'U+' + object.codePoint.toString(16).toUpperCase();\n\t\t\t;\n\t\t\tif (object.error) {\n\t\t\t\traises(function () {\n\t\t\t\t\tutf8.decode(object.encoded);\n\t\t\t\t}, Error, 'Error: non-scalar value detected');\n\t\t\t\traises(function () {\n\t\t\t\t\tutf8.encode(object.decoded);\n\t\t\t\t}, Error, 'Error: non-scalar value detected');\n\t\t\t} else {\n\t\t\t\tequal(object.encoded, utf8.encode(object.decoded), 'Encoding: ' + description);\n\t\t\t\tequal(object.decoded, utf8.decode(object.encoded), 'Decoding: ' + description);\n\t\t\t}\n\t\t});\n\n\t\t// Error handling\n\t\traises(function () {\n\t\t\tutf8.decode('\\uFFFF');\n\t\t}, Error, 'Error: invalid UTF-8 detected');\n\t\traises(function () {\n\t\t\tutf8.decode('\\xE9\\x00\\x00');\n\t\t}, Error, 'Error: invalid continuation byte (4-byte sequence expected)');\n\t\traises(function () {\n\t\t\tutf8.decode('\\xC2\\uFFFF');\n\t\t}, Error, 'Error: invalid continuation byte');\n\t\traises(function () {\n\t\t\tutf8.decode('\\xF0\\x9D');\n\t\t}, Error, 'Error: invalid byte index');\n\t});\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// configure QUnit and call `QUnit.start()` for\n\t// Narwhal, Node.js, PhantomJS, Rhino, and RingoJS\n\tif (!root.document || root.phantom) {\n\t\tQUnit.config.noglobals = true;\n\t\tQUnit.start();\n\t}\n})(typeof global == 'object' && global || this);\n\n//# sourceMappingURL=tests-compiled.js.map"]}